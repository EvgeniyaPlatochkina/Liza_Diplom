// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using diplomliza1.Data;

#nullable disable

namespace diplomliza1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230524103844_start")]
    partial class start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("diplomliza1.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Apartament")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("House")
                        .HasColumnType("int");

                    b.Property<int>("Housing")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.FamilyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FamilyStatuses");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.INN", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("INNs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.JobTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.JobVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Earnings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobVacancys");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.MilitryDuty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MilitryDuties");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IssuedByDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Registration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Series")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Passports");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.PlaceOfStudy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EducationId")
                        .HasColumnType("int");

                    b.Property<string>("Speciality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EducationId");

                    b.ToTable("PlaceOfStudys");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Questionnare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AboutMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamilyStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MilitryDutyId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalQualities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceOfStudyId")
                        .HasColumnType("int");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkExperienceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FamilyStatusId");

                    b.HasIndex("GenderId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("MilitryDutyId");

                    b.HasIndex("PlaceOfStudyId");

                    b.HasIndex("WorkExperienceId")
                        .IsUnique();

                    b.ToTable("Questionnares");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.SNILS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SNILSs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FamilyStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("INNId")
                        .HasColumnType("int");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MilitryDutyId")
                        .HasColumnType("int");

                    b.Property<int?>("PassportId")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaceOfStudyId")
                        .HasColumnType("int");

                    b.Property<int>("SNILSId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("FamilyStatusId");

                    b.HasIndex("GenderId");

                    b.HasIndex("INNId")
                        .IsUnique();

                    b.HasIndex("JobTitleId");

                    b.HasIndex("MilitryDutyId");

                    b.HasIndex("PassportId")
                        .IsUnique()
                        .HasFilter("[PassportId] IS NOT NULL");

                    b.HasIndex("PlaceOfStudyId");

                    b.HasIndex("SNILSId")
                        .IsUnique();

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.WorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HoursWorked")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpaseOfWork")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.PlaceOfStudy", b =>
                {
                    b.HasOne("diplomliza1.Data.Entities.Education", "Education")
                        .WithMany("PlaceOfStudy")
                        .HasForeignKey("EducationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Education");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Questionnare", b =>
                {
                    b.HasOne("diplomliza1.Data.Entities.FamilyStatus", "FamilyStatus")
                        .WithMany("Questionnares")
                        .HasForeignKey("FamilyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.Gender", "Gender")
                        .WithMany("Questionnares")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.JobVacancy", "JobTitle")
                        .WithMany("Questionnares")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.MilitryDuty", "MilitryDuty")
                        .WithMany("Questionnares")
                        .HasForeignKey("MilitryDutyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.PlaceOfStudy", "PlaceOfStudy")
                        .WithMany("Questionnares")
                        .HasForeignKey("PlaceOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.WorkExperience", "WorkExperience")
                        .WithOne("Questionnare")
                        .HasForeignKey("diplomliza1.Data.Entities.Questionnare", "WorkExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FamilyStatus");

                    b.Navigation("Gender");

                    b.Navigation("JobTitle");

                    b.Navigation("MilitryDuty");

                    b.Navigation("PlaceOfStudy");

                    b.Navigation("WorkExperience");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Staff", b =>
                {
                    b.HasOne("diplomliza1.Data.Entities.Address", "Address")
                        .WithOne("Staff")
                        .HasForeignKey("diplomliza1.Data.Entities.Staff", "AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.FamilyStatus", "FamilyStatus")
                        .WithMany("Staffs")
                        .HasForeignKey("FamilyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.Gender", "Gender")
                        .WithMany("Staffs")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.INN", "INN")
                        .WithOne("Staff")
                        .HasForeignKey("diplomliza1.Data.Entities.Staff", "INNId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.JobTitle", "JobTitle")
                        .WithMany("Staffs")
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.MilitryDuty", "MilitryDuty")
                        .WithMany("Staffs")
                        .HasForeignKey("MilitryDutyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.Passport", "Passport")
                        .WithOne("Staff")
                        .HasForeignKey("diplomliza1.Data.Entities.Staff", "PassportId");

                    b.HasOne("diplomliza1.Data.Entities.PlaceOfStudy", "PlaceOfStudy")
                        .WithMany("Staffs")
                        .HasForeignKey("PlaceOfStudyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("diplomliza1.Data.Entities.SNILS", "SNILS")
                        .WithOne("Staff")
                        .HasForeignKey("diplomliza1.Data.Entities.Staff", "SNILSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("FamilyStatus");

                    b.Navigation("Gender");

                    b.Navigation("INN");

                    b.Navigation("JobTitle");

                    b.Navigation("MilitryDuty");

                    b.Navigation("Passport");

                    b.Navigation("PlaceOfStudy");

                    b.Navigation("SNILS");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.User", b =>
                {
                    b.HasOne("diplomliza1.Data.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Address", b =>
                {
                    b.Navigation("Staff")
                        .IsRequired();
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Education", b =>
                {
                    b.Navigation("PlaceOfStudy");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.FamilyStatus", b =>
                {
                    b.Navigation("Questionnares");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Gender", b =>
                {
                    b.Navigation("Questionnares");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.INN", b =>
                {
                    b.Navigation("Staff")
                        .IsRequired();
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.JobTitle", b =>
                {
                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.JobVacancy", b =>
                {
                    b.Navigation("Questionnares");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.MilitryDuty", b =>
                {
                    b.Navigation("Questionnares");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Passport", b =>
                {
                    b.Navigation("Staff")
                        .IsRequired();
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.PlaceOfStudy", b =>
                {
                    b.Navigation("Questionnares");

                    b.Navigation("Staffs");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.SNILS", b =>
                {
                    b.Navigation("Staff")
                        .IsRequired();
                });

            modelBuilder.Entity("diplomliza1.Data.Entities.WorkExperience", b =>
                {
                    b.Navigation("Questionnare")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
